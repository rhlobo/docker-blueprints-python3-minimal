#!/bin/bash
# vim: set syntax=bash:


# VARIABLES ###################################################################
_USER=${SUDO_USER}
_HOME=$(eval echo ~${_USER})

# Script base directory (resolving symlinks)
_BASEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
    _BASEDIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$_BASEDIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
_BASEDIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && cd .. && pwd )"

_PROJECT=${PWD##*/}


# VALIDATION ##################################################################
# Base image name
fix_base_image_references() {
    local _EXT=$1
    local _PATH=$2
    sed -ri "s#^FROM ([^/]*).*#FROM \1\/${_PROJECT}-base#g" "${_PATH}Dockerfile.${_EXT}"
}
fix_base_image_references "dev" ".devcontainer/"
fix_base_image_references "prod"


# MAIN ########################################################################
echo "Building docker image ${_USER}/${_PROJECT}-base"
doas docker build --tag "${_USER}/${_PROJECT}-base" --file "Dockerfile.base" .
